{"ast":null,"code":"// import React, { Component } from 'react';\n// import 'react-toastify/dist/ReactToastify.css';\n// import { ToastContainer, toast } from 'react-toastify';\n// import ApprovalCard from '../approvalCard';\n// import axios from 'axios';\n// const apiEndpoint = 'https://newsbuzz-react-server.herokuapp.com/api/funds';\n// class Funds extends Component {\n// \tstate = {\n// \t\tfunds: []\n// \t};\n// \tasync componentDidMount() {\n// \t\tconst data = await axios.get(apiEndpoint + '/isApproved/Pending');\n// \t\tconst funds = data.data;\n// \t\tif (!funds.length) {\n// \t\t\tconsole.log(funds);\n// \t\t}\n// \t\tthis.setState({ funds });\n// \t}\n// \tacceptFund = async fund => {\n// \t\tawait axios.put(apiEndpoint + '/' + fund._id, { isApproved: 'Approved' });\n// \t\tconst data = await axios.get(apiEndpoint + '/isApproved/Pending');\n// \t\tconst funds = data.data;\n// \t\tthis.setState({ funds });\n// \t\ttoast.success('The fund is successfully accepted!');\n// \t};\n// \trejectFund = async fund => {\n// \t\tawait axios.put(apiEndpoint + '/' + fund._id, { isApproved: 'Rejected' });\n// \t\tconst data = await axios.get(apiEndpoint + '/isApproved/Pending');\n// \t\tconst funds = data.data;\n// \t\tthis.setState({ funds });\n// \t\ttoast.error('The fund is successfully rejected!');\n// \t};\n// \trender() {\n// \t\tif (this.state.funds === 'Alas! Complain with the given id was not found!')\n// \t\t\treturn <h1>No funds found for the approval!</h1>;\n// \t\treturn (\n// \t\t\t<React.Fragment>\n// \t\t\t\t<div className='containers'>\n// \t\t\t\t\t<h1>Funds</h1>\n// \t\t\t\t\t<ToastContainer />\n// \t\t\t\t\t<div className='row'>\n// \t\t\t\t\t\t{this.state.funds.map(fund => (\n// \t\t\t\t\t\t\t<div className='col-6 my-2' key={fund._id}>\n// \t\t\t\t\t\t\t\t<ApprovalCard\n// \t\t\t\t\t\t\t\t\ttitle={fund.title}\n// \t\t\t\t\t\t\t\t\tdescription={fund.description}\n// \t\t\t\t\t\t\t\t\thandleAccept={() => this.acceptFund(fund)}\n// \t\t\t\t\t\t\t\t\thandleReject={() => this.rejectFund(fund)}\n// \t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t))}\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t</React.Fragment>\n// \t\t);\n// \t}\n// }\n// export default Funds;","map":{"version":3,"sources":["G:/Newsbuzz-admin-web/Newsbuzz-react/src/components/admin/funds.jsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { Component } from 'react';\r\n// import 'react-toastify/dist/ReactToastify.css';\r\n// import { ToastContainer, toast } from 'react-toastify';\r\n// import ApprovalCard from '../approvalCard';\r\n// import axios from 'axios';\r\n\r\n// const apiEndpoint = 'https://newsbuzz-react-server.herokuapp.com/api/funds';\r\n\r\n// class Funds extends Component {\r\n// \tstate = {\r\n// \t\tfunds: []\r\n// \t};\r\n\r\n// \tasync componentDidMount() {\r\n// \t\tconst data = await axios.get(apiEndpoint + '/isApproved/Pending');\r\n// \t\tconst funds = data.data;\r\n\r\n// \t\tif (!funds.length) {\r\n// \t\t\tconsole.log(funds);\r\n// \t\t}\r\n// \t\tthis.setState({ funds });\r\n// \t}\r\n\r\n// \tacceptFund = async fund => {\r\n// \t\tawait axios.put(apiEndpoint + '/' + fund._id, { isApproved: 'Approved' });\r\n\r\n// \t\tconst data = await axios.get(apiEndpoint + '/isApproved/Pending');\r\n// \t\tconst funds = data.data;\r\n\r\n// \t\tthis.setState({ funds });\r\n\r\n// \t\ttoast.success('The fund is successfully accepted!');\r\n// \t};\r\n\r\n// \trejectFund = async fund => {\r\n// \t\tawait axios.put(apiEndpoint + '/' + fund._id, { isApproved: 'Rejected' });\r\n\r\n// \t\tconst data = await axios.get(apiEndpoint + '/isApproved/Pending');\r\n// \t\tconst funds = data.data;\r\n\r\n// \t\tthis.setState({ funds });\r\n// \t\ttoast.error('The fund is successfully rejected!');\r\n// \t};\r\n// \trender() {\r\n// \t\tif (this.state.funds === 'Alas! Complain with the given id was not found!')\r\n// \t\t\treturn <h1>No funds found for the approval!</h1>;\r\n// \t\treturn (\r\n// \t\t\t<React.Fragment>\r\n// \t\t\t\t<div className='containers'>\r\n// \t\t\t\t\t<h1>Funds</h1>\r\n// \t\t\t\t\t<ToastContainer />\r\n\r\n// \t\t\t\t\t<div className='row'>\r\n// \t\t\t\t\t\t{this.state.funds.map(fund => (\r\n// \t\t\t\t\t\t\t<div className='col-6 my-2' key={fund._id}>\r\n// \t\t\t\t\t\t\t\t<ApprovalCard\r\n// \t\t\t\t\t\t\t\t\ttitle={fund.title}\r\n// \t\t\t\t\t\t\t\t\tdescription={fund.description}\r\n// \t\t\t\t\t\t\t\t\thandleAccept={() => this.acceptFund(fund)}\r\n// \t\t\t\t\t\t\t\t\thandleReject={() => this.rejectFund(fund)}\r\n// \t\t\t\t\t\t\t\t/>\r\n// \t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t))}\r\n// \t\t\t\t\t</div>\r\n// \t\t\t\t</div>\r\n// \t\t\t</React.Fragment>\r\n// \t\t);\r\n// \t}\r\n// }\r\n\r\n// export default Funds;\r\n"]},"metadata":{},"sourceType":"module"}