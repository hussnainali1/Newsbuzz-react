{"ast":null,"code":"var _jsxFileName = \"G:\\\\Newsbuzz-admin-web\\\\Newsbuzz-react\\\\src\\\\components\\\\users.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport UsersTable from \"./usersTable\";\nimport ListGroup from \"./common/listGroup\";\nimport Pagination from \"./common/pagination\";\nimport { getUsers, deleteUser } from \"../services/fakeUserService\";\nimport { getTypes } from \"../services/fakeUserLevelService\";\nimport { paginate } from \"../utils/paginate\";\nimport _ from \"lodash\";\nimport SearchBox from \"./searchBox\";\n\nclass Users extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      genres: [],\n      currentPage: 1,\n      pageSize: 4,\n      searchQuery: \"\",\n      selectedGenre: null,\n      sortColumn: {\n        path: \"title\",\n        order: \"asc\"\n      }\n    };\n\n    this.handleDelete = movie => {\n      const movies = this.state.movies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies\n      });\n      deleteUser(movie._id);\n    };\n\n    this.handleLike = movie => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie);\n      movies[index] = { ...movies[index]\n      };\n      movies[index].liked = !movies[index].liked;\n      this.setState({\n        movies\n      });\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleGenreSelect = genre => {\n      this.setState({\n        selectedGenre: genre,\n        searchQuery: \"\",\n        currentPage: 1\n      });\n    };\n\n    this.handleSearch = query => {\n      this.setState({\n        searchQuery: query,\n        selectedGenre: null,\n        currentPage: 1\n      });\n    };\n\n    this.handleSort = sortColumn => {\n      this.setState({\n        sortColumn\n      });\n    };\n\n    this.getPagedData = () => {\n      const {\n        pageSize,\n        currentPage,\n        sortColumn,\n        selectedGenre,\n        searchQuery,\n        movies: allMovies\n      } = this.state;\n      let filtered = allMovies;\n      if (searchQuery) filtered = allMovies.filter(m => m.title.toLowerCase().startsWith(searchQuery.toLowerCase()));else if (selectedGenre && selectedGenre._id) filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\n\n      const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n      const movies = paginate(sorted, currentPage, pageSize);\n      return {\n        totalCount: filtered.length,\n        data: movies\n      };\n    };\n  }\n\n  componentDidMount() {\n    const genres = [{\n      _id: \"\",\n      name: \"All Users\"\n    }, ...getTypes()];\n    this.setState({\n      movies: getUsers(),\n      genres\n    });\n  }\n\n  render() {\n    const {\n      length: count\n    } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      searchQuery\n    } = this.state;\n    if (count === 0) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, \"There are no users in the database.\");\n    const {\n      totalCount,\n      data: movies\n    } = this.getPagedData();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup, {\n      items: this.state.genres,\n      selectedItem: this.state.selectedGenre,\n      onItemSelect: this.handleGenreSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/users/new\",\n      className: \"btn btn-cz\",\n      style: {\n        marginBottom: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, \"New User\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, \"Showing \", totalCount, \" users in the database.\"), /*#__PURE__*/React.createElement(SearchBox, {\n      value: searchQuery,\n      onChange: this.handleSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(UsersTable, {\n      movies: movies,\n      sortColumn: sortColumn,\n      onLike: this.handleLike,\n      onDelete: this.handleDelete,\n      onSort: this.handleSort,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Pagination, {\n      itemsCount: totalCount,\n      pageSize: pageSize,\n      currentPage: currentPage,\n      onPageChange: this.handlePageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Users;","map":{"version":3,"sources":["G:/Newsbuzz-admin-web/Newsbuzz-react/src/components/users.jsx"],"names":["React","Component","Link","UsersTable","ListGroup","Pagination","getUsers","deleteUser","getTypes","paginate","_","SearchBox","Users","state","movies","genres","currentPage","pageSize","searchQuery","selectedGenre","sortColumn","path","order","handleDelete","movie","filter","m","_id","setState","handleLike","index","indexOf","liked","handlePageChange","page","handleGenreSelect","genre","handleSearch","query","handleSort","getPagedData","allMovies","filtered","title","toLowerCase","startsWith","sorted","orderBy","totalCount","length","data","componentDidMount","name","render","count","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UsersTable from \"./usersTable\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { getUsers, deleteUser } from \"../services/fakeUserService\";\r\nimport { getTypes } from \"../services/fakeUserLevelService\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport _ from \"lodash\";\r\nimport SearchBox from \"./searchBox\";\r\n\r\nclass Users extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    currentPage: 1,\r\n    pageSize: 4,\r\n    searchQuery: \"\",\r\n    selectedGenre: null,\r\n    sortColumn: { path: \"title\", order: \"asc\" }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const genres = [{ _id: \"\", name: \"All Users\" }, ...getTypes()];\r\n\r\n    this.setState({ movies: getUsers(), genres });\r\n  }\r\n\r\n  handleDelete = movie => {\r\n    const movies = this.state.movies.filter(m => m._id !== movie._id);\r\n    this.setState({ movies });\r\n\r\n    deleteUser(movie._id);\r\n  };\r\n\r\n  handleLike = movie => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenreSelect = genre => {\r\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\r\n  };\r\n\r\n  handleSearch = query => {\r\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n  };\r\n\r\n  handleSort = sortColumn => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      sortColumn,\r\n      selectedGenre,\r\n      searchQuery,\r\n      movies: allMovies\r\n    } = this.state;\r\n\r\n    let filtered = allMovies;\r\n    if (searchQuery)\r\n      filtered = allMovies.filter(m =>\r\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    else if (selectedGenre && selectedGenre._id)\r\n      filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const movies = paginate(sorted, currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\r\n\r\n    if (count === 0) return <p>There are no users in the database.</p>;\r\n\r\n    const { totalCount, data: movies } = this.getPagedData();\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <ListGroup\r\n            items={this.state.genres}\r\n            selectedItem={this.state.selectedGenre}\r\n            onItemSelect={this.handleGenreSelect}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          <Link\r\n            to=\"/users/new\"\r\n            className=\"btn btn-cz\"\r\n            style={{ marginBottom: 20 }}\r\n          >\r\n            New User\r\n          </Link>\r\n          <p>Showing {totalCount} users in the database.</p>\r\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n          <UsersTable\r\n            movies={movies}\r\n            sortColumn={sortColumn}\r\n            onLike={this.handleLike}\r\n            onDelete={this.handleDelete}\r\n            onSort={this.handleSort}\r\n          />\r\n          <Pagination\r\n            itemsCount={totalCount}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChange={this.handlePageChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Users;\r\n"]},"metadata":{},"sourceType":"module"}