{"ast":null,"code":"import jwtDecode from 'jwt-decode';\nimport http from './httpService';\nimport { apiUrl } from '../config.json';\nconst apiEndpoint = apiUrl + '/auth';\nconst tokenKey = 'token';\nhttp.setJwt(getJwt());\nexport async function login(email, password) {\n  const {\n    data: jwt\n  } = await http.post(apiEndpoint, {\n    email,\n    password\n  });\n  localStorage.setItem(tokenKey, jwt);\n}\nexport function loginWithJwt(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\nexport async function logout() {\n  localStorage.removeItem(tokenKey);\n}\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    return jwtDecode(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\nexport function getJwt() {\n  return localStorage.getItem(tokenKey);\n}\nexport default {\n  login,\n  loginWithJwt,\n  logout,\n  getCurrentUser,\n  getJwt\n};","map":{"version":3,"sources":["G:/Newsbuzz-admin-web/Newsbuzz-react/src/services/authService.js"],"names":["jwtDecode","http","apiUrl","apiEndpoint","tokenKey","setJwt","getJwt","login","email","password","data","jwt","post","localStorage","setItem","loginWithJwt","logout","removeItem","getCurrentUser","getItem","ex"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,MAAMC,WAAW,GAAGD,MAAM,GAAG,OAA7B;AACA,MAAME,QAAQ,GAAG,OAAjB;AAEAH,IAAI,CAACI,MAAL,CAAYC,MAAM,EAAlB;AAEA,OAAO,eAAeC,KAAf,CAAqBC,KAArB,EAA4BC,QAA5B,EAAsC;AAC5C,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAgB,MAAMV,IAAI,CAACW,IAAL,CAAUT,WAAV,EAAuB;AAAEK,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAvB,CAA5B;AACAI,EAAAA,YAAY,CAACC,OAAb,CAAqBV,QAArB,EAA+BO,GAA/B;AACA;AAED,OAAO,SAASI,YAAT,CAAsBJ,GAAtB,EAA2B;AACjCE,EAAAA,YAAY,CAACC,OAAb,CAAqBV,QAArB,EAA+BO,GAA/B;AACA;AAED,OAAO,eAAeK,MAAf,GAAwB;AAC9BH,EAAAA,YAAY,CAACI,UAAb,CAAwBb,QAAxB;AACA;AAED,OAAO,SAASc,cAAT,GAA0B;AAChC,MAAI;AACH,UAAMP,GAAG,GAAGE,YAAY,CAACM,OAAb,CAAqBf,QAArB,CAAZ;AACA,WAAOJ,SAAS,CAACW,GAAD,CAAhB;AACA,GAHD,CAGE,OAAOS,EAAP,EAAW;AACZ,WAAO,IAAP;AACA;AACD;AAED,OAAO,SAASd,MAAT,GAAkB;AACxB,SAAOO,YAAY,CAACM,OAAb,CAAqBf,QAArB,CAAP;AACA;AAED,eAAe;AACdG,EAAAA,KADc;AAEdQ,EAAAA,YAFc;AAGdC,EAAAA,MAHc;AAIdE,EAAAA,cAJc;AAKdZ,EAAAA;AALc,CAAf","sourcesContent":["import jwtDecode from 'jwt-decode';\r\nimport http from './httpService';\r\nimport { apiUrl } from '../config.json';\r\nconst apiEndpoint = apiUrl + '/auth';\r\nconst tokenKey = 'token';\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n\tconst { data: jwt } = await http.post(apiEndpoint, { email, password });\r\n\tlocalStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n\tlocalStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport async function logout() {\r\n\tlocalStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n\ttry {\r\n\t\tconst jwt = localStorage.getItem(tokenKey);\r\n\t\treturn jwtDecode(jwt);\r\n\t} catch (ex) {\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nexport function getJwt() {\r\n\treturn localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport default {\r\n\tlogin,\r\n\tloginWithJwt,\r\n\tlogout,\r\n\tgetCurrentUser,\r\n\tgetJwt\r\n};\r\n"]},"metadata":{},"sourceType":"module"}